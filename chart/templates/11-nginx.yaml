apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: images
  namespace: {{ .Release.Namespace }}
spec:
  storageClassName: default
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
  namespace: {{ .Release.Namespace }}
  labels:
    app: kipxe
    component: nginx
spec:
  selector:
    app: kipxe
    component: nginx
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-ssh
  namespace: {{ .Release.Namespace }}
  annotations:
    dns.gardener.cloud/class: garden
    dns.gardener.cloud/dnsnames: {{ .Values.fqdn.ssh }}
    dns.gardener.cloud/ttl: "500"

spec:
  selector:
    app: kipxe
    component: nginx
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 22
      name: sshd
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx
  namespace: {{ .Release.Namespace }}
data:
  nginx.conf: |+
    worker_processes  5;
    events {
      worker_connections  4096;
    }
    http {
      server {
        listen 8080;
        location /healthz {
            return 200; 
        }
        location / {
          sendfile   on;
          tcp_nopush on;
          root /data;
        }
      }
    }
  hello: |+
    hello world
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kipxe
    component: nginx
  name: nginx
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kipxe
      component: nginx
  template:
    metadata:
      labels:
        app: kipxe
        component: nginx
    spec:
      volumes:
        - name: nginxconf
          configMap:
            name: nginx
            items:
              - key: nginx.conf
                path: nginx.conf
        - name: images
          persistentVolumeClaim:
            claimName: images
        - name: hello
          configMap:
            name: nginx
            items:
              - key: hello
                path: hello
      containers:
      - name: nginx
        image: nginx:1.14.2
        imagePullPolicy: "IfNotPresent"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 30
          timeoutSeconds: 5
        ports:
        - containerPort: 8080
          protocol: TCP
        resources:
          {}
        volumeMounts:
          - name: nginxconf
            mountPath: "/etc/nginx"
            readOnly: true
          - name: images
            mountPath: "/data"
            readOnly: true
          - name: hello
            mountPath: "/data/demo"
            readOnly: true

      - name: sshd
        image: docker.io/mweindel/rsshd:0.1
        imagePullPolicy: IfNotPresent
        command: ['/usr/local/bin/sshd.sh']
        env:
        - name: AUTHORIZED_KEYS
          value: |+
{{- range $index, $key := .Values.sshkeys }}
            {{ $key }}
{{- end }}
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 50m
            memory: 200Mi
        ports:
        - containerPort: 22
          name: sshd
        - containerPort: 10000
          name: p0
        - containerPort: 10001
          name: p1
        - containerPort: 10002
          name: p2
        volumeMounts:
        - name: images
          mountPath: "/data"
          readOnly: false
        - name: hello
          mountPath: "/data/demo"
          readOnly: true

      serviceAccountName: kipxe
      terminationGracePeriodSeconds: 120

