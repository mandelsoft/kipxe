#
# service account
#
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: {{ .Release.Name }}
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
---
#
# permissions
#
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  labels:
    app: {{ .Release.Name }}
  name: {{ .Release.Name }}
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - update
  - create

- apiGroups:
  - ipxe.mandelsoft.org
  resources:
  - metadatamappers
  - metadatamappers/status
  - bootprofilematchers
  - bootprofilematchers/status
  - bootprofiles
  - bootprofiles/status
  - bootresources
  - bootresources/status
  - machines
  - machines/status
  verbs:
  - get
  - list
  - update
  - watch
  - create

- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch

- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - update
  - create
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  labels:
    app: {{ .Release.Name }}
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  resourceNames:
  # lease for controller manager
  - kipxe-controllers
  verbs:
  - get
  - update
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  labels:
    app: {{ .Release.Name }}
  name: {{ .Release.Name }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ .Release.Name }}
subjects:
- kind: ServiceAccount
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  labels:
    app: {{ .Release.Name }}
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ .Release.Name }}
subjects:
- kind: ServiceAccount
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}

---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Release.Name }}
    component: kipxe-controller-manager
spec:
  selector:
    app: {{ .Release.Name }}
    component: kipxe-controller-manager
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8081
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Release.Name }}
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  tls:
    - hosts:
        - {{ .Values.fqdn.kipxe }}
      secretName: {{ .Release.Name }}
  rules:
    - host: {{ .Values.fqdn.kipxe }}
      http:
        paths:
          - path: /resources/(.*)
            backend:
              serviceName: nginx
              servicePort: 80
          - path: /(.*)
            backend:
              serviceName: {{ .Release.Name }}
              servicePort: 80
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: {{ .Release.Name }}-http
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Release.Name }}
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
    - host: {{ .Values.fqdn.kipxe }}
      http:
        paths:
          - path: /cacert
            backend:
              serviceName: {{ .Release.Name }}
              servicePort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ .Release.Name }}
    component: kipxe-controller-manager
  name: {{ .Release.Name }}-controller-manager
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}
      component: kipxe-controller-manager
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
        component: kipxe-controller-manager
    spec:
      containers:
      - name: kipxe
        image: mandelsoft/kipxe:latest
        imagePullPolicy: "Always"
        args:
        - --controllers=all
        - --server-port-http=8080
        - --pxe-port=8081
        - --secret={{ .Release.Name }}
        - --service={{ .Release.Name }}
        - --hostname={{ .Values.fqdn.kipxe }}
        - --trace-requests=false
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 30
          timeoutSeconds: 5
        ports:
        - containerPort: 8080
          protocol: TCP
        resources:
          {}

      serviceAccountName: {{ .Release.Name }}
      terminationGracePeriodSeconds: 120

